import '~/styles/globals.css';

import { GeistSans } from 'geist/font/sans';
import dynamic from 'next/dynamic';

import { TRPCReactProvider } from '~/trpc/react';
import { Header } from '~/components/layout/header';
import { Toaster } from '~/components/ui/toaster';
import { z } from 'zod';
import { customErrorMap } from '~/lib/zod-error-map';
export const metadata = {
  title: 'Create T3 App',
  description: 'Generated by create-t3-app',
  icons: [{ rel: 'icon', url: '/favicon.ico' }],
};

const Particle = dynamic(() => import('~/components/accessories/particle'), {
  ssr: false,
});

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  z.setErrorMap(customErrorMap);

  return (
    <html lang="ja" className={`${GeistSans.variable}`}>
      <body className="h-screen max-h-full min-h-screen">
        <TRPCReactProvider>
          <Header />
          <main className="z-50">{children}</main>
          <div className="relative">{/* <Particle /> */}</div>
        </TRPCReactProvider>
        <Toaster />
      </body>
    </html>
  );
}
